'use client'

import { ArrowLeft, Upload } from "lucide-react";
import Image from "next/image";
import uploadImageAvatar from '../../../asset/image/upload-avatar.png';
import InputText from "@/app/components/input/InputText";
import InputDatePicker from "@/app/components/input/InputDatePicker";
import InputRadioGroup from "@/app/components/input/InputRadioGroup";
import InputSelectSearch from "@/app/components/input/InputSelectSearch";
import { DOMICILE } from "@/data/domicile";
import InputDialCode from "@/app/components/input/InputDialCode";
import { Tooltip, TooltipContent, TooltipTrigger } from "@/components/ui/tooltip";
import { useParams } from "next/navigation";
import { supabase } from '@/lib/supabaseClient';
import { useEffect, useState } from "react";
import toast, { Toaster } from 'react-hot-toast';
import { ApplyPageSkeleton } from "@/app/components/skeletons/candidatesSkeleton";

const ApplyJobPage = () => {
  const params = useParams();
  const jobId = params?.id;

  const [job, setJob] = useState<any>(null);
  const [isLoading, setIsLoading] = useState<boolean>(true);

  useEffect(() => {
    if (!jobId) return;

    const fetchJob = async () => {
      setIsLoading(true);
      const { data, error } = await supabase.from('jobs').select('*').eq('id', jobId).single();

      if (error) {
        console.log('Error fetching job:', error);
      } else {
        setJob(data);
      }
      setIsLoading(false);
    };

    fetchJob();
  }, [jobId]);

  return (
    <div className="w-full bg-[#FAFAFA] flex justify-center items-center sm:py-16">
      {isLoading ? (
        <ApplyPageSkeleton />
      ) : (
        <div className="bg-white sm:border sm:border-[#E0E0E0] sm:shadow w-full flex flex-col gap-[24px] h-screen sm:h-[800px] sm:max-w-[600px] md:max-w-[700px] max-[450px]:py-[40px] max-[450px]:px-[20px] p-[40px]">
          {/* Apply header */}
          <div className="flex items-center gap-[1rem]">
            <div className="w-fit flex items-center">
              <button className="w-[1.75rem] h-[1.75rem] bg-white hover:bg-[#f7f7f7] border p-1 shadow cursor-pointer border-[#E0E0E0] rounded-[8px] flex justify-center items-center">
                <ArrowLeft strokeWidth={3} className="w-[1.25] h-[1.25] text-[#333333] font-semibold" />
              </button>
            </div>
            <div className="flex-1 flex justify-between items-center">
              <h1 className="text-[#1D1F20] text-[1.125rem] font-semibold">Apply Front End at Rakamin</h1>
              <p className="text-[#404040] text-[0.875rem] max-[650px]:hidden">ℹ️ This field required to fill</p>
              <div className="min-[650px]:hidden">
                <Tooltip>
                  <TooltipTrigger>ℹ️</TooltipTrigger>
                  <TooltipContent>
                    <p className="text-white text-[0.875rem]">This field required to fill</p>
                  </TooltipContent>
                </Tooltip>
              </div>
            </div>
          </div>
          {/* Apply form */}
          <div className="md:px-[24px] space-y-[1rem] overflow-y-auto">
            <div>
              <p className="text-(--error-color) text-[0.75rem] font-semibold">
                <span className="">*</span> Required
              </p>
            </div>
            <form className="space-y-[1rem]">
              <div className="w-full flex flex-col gap-[1rem]">
                <label htmlFor="profil-picture" className="text-[#404040] text-[0.75rem] font-semibold">
                  Photo Profile
                </label>
                <Image alt="Upload image pict" src={uploadImageAvatar?.src} width={300} height={300} className="w-[8rem] h-[8rem]" />
                <button className="w-fit border border-[#E0E0E0] px-[1rem] py-1 flex gap-1 items-center hover:bg-[#f7f6f6] rounded-[8px] cursor-pointer shadow">
                  <Upload className="w-[1rem] h-[1rem]" strokeWidth={3} />
                  <span className="text-[#1D1F20] text-[0.875rem] font-semibold">Take a Pitcure</span>
                </button>
              </div>
              <div>
                <InputText
                  label="Full name"
                  placeholder="Enter your full name"
                  required
                  className="relative flex items-center rounded-[8px] border-2 border-[#EDEDED] bg-white text-[#404040] focus-within:border-[#01959F] duration-300 text-[0.875rem] min-h-11 max-h-[40px]"
                />
              </div>
              <div>
                <InputDatePicker placeholder="30 January 2021" label="Date of birth" required />
              </div>
              <div>
                <InputRadioGroup
                  label="Pronoun (gender)"
                  required
                  options={[
                    { label: 'She/her (Female)', value: 'female' },
                    { label: 'He/him (Male)', value: 'male' },
                  ]}
                  name="layout"
                  direction="horizontal"
                  gap="gap-4"
                />
              </div>
              <div>
                <InputSelectSearch
                  label="Domisili"
                  required
                  className="relative flex items-center rounded-[8px] border-2 border-[#EDEDED] bg-white text-[#404040] focus-within:border-[#01959F] duration-300 text-[0.875rem] min-h-11"
                  placeholder="Pilih provinsi..."
                  options={DOMICILE.map((d) => ({
                    label: d.value,
                    value: d.id,
                  }))}
                />
              </div>
              <div>
                <InputDialCode
                  className="relative flex items-center rounded-[8px] border-2 border-[#EDEDED] bg-white text-[#404040] focus-within:border-[#01959F] duration-300 text-[0.875rem] min-h-11 max-h-[40px]"
                  placeholder="81XXXXXXXXX"
                />
              </div>
              <div>
                <InputText
                  label="Email"
                  type="email"
                  placeholder="Enter your email address"
                  required
                  className="relative flex items-center rounded-[8px] border-2 border-[#EDEDED] bg-white text-[#404040] focus-within:border-[#01959F] duration-300 text-[0.875rem] min-h-11 max-h-[40px]"
                />
              </div>
              <div>
                <InputText
                  label="Link Linkedin"
                  placeholder="https://www.linkedin.com/in/username"
                  required
                  className="relative flex items-center rounded-[8px] border-2 border-[#EDEDED] bg-white text-[#404040] focus-within:border-[#01959F] duration-300 text-[0.875rem] min-h-11 max-h-[40px]"
                />
              </div>
            </form>
          </div>
          {/* Apply footer */}
          <div className="w-full">
            <button className="bg-[#01959F] w-full hover:bg-[#038690] cursor-pointer px-[1rem] py-[6px] rounded-[8px] text-white text-[1rem] font-semibold">
              Submit
            </button>
          </div>
        </div>
      )}
      <Toaster position="bottom-left" />
    </div>
  );
}

export default ApplyJobPage;